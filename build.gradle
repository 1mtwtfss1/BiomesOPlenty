buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply from: 'classremapper.gradle'

repositories { mavenLocal() }

group = "com.github.glitchfiend.biomesoplenty"
archivesBaseName = "BiomesOPlenty"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

def getGitHash = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = "${minecraft_version}-${mod_version}.${System.getenv().BUILD_NUMBER}"

minecraft {
    mappings channel: 'official', version: minecraft_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client = {
            workingDirectory = project.file("run").canonicalPath
            source sourceSets.main
        }
        server = {
            workingDirectory = project.file("run").canonicalPath
            source sourceSets.main
        }
    }
}

processResources {
    from (sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.version
    }
}

jar {
    classifier = 'universal'
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    from (sourceSets.main.output) {
        include 'LICENSE.txt'
    }

    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task apiJar(type: Jar) {
    from(sourceSets.main.allJava) {
        include 'biomesoplenty/api/**'
    }
    from (sourceSets.main.output) {
        include 'LICENSE.txt'
        include 'biomesoplenty/api/**'
    }

    classifier = 'api'
}

def changelog_file = rootProject.file("build/BiomesOPlenty-${version}-changelog.txt")

curseforge {
    if (project.hasProperty('curseApiKey')) {
        apiKey = project.getProperty('curseApiKey')
        project {
            id = '220318'

            if (changelog_file.exists()) {
                changelog = changelog_file
            }

            releaseType = 'beta'

            mainArtifact(jar) {
                displayName = "Biomes O' Plenty ${version}"
            }
            addArtifact sourcesJar
            addArtifact deobfJar
            addArtifact apiJar
        }
    }
}

artifacts {
    if (changelog_file.exists()) {
        archives changelog_file
    }
    archives jar
    archives sourcesJar
    archives deobfJar
    archives apiJar
}
